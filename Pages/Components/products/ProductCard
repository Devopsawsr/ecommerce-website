import React from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Star, ShoppingCart, Heart } from "lucide-react";
import { motion } from "framer-motion";

export default function ProductCard({ product, onAddToCart }) {
  const renderStars = (rating) => {
    return Array.from({ length: 5 }, (_, i) => (
      <Star
        key={i}
        className={`w-3 h-3 ${
          i < rating ? "text-yellow-400 fill-current" : "text-gray-300"
        }`}
      />
    ));
  };

  return (
    <motion.div
      whileHover={{ y: -4, scale: 1.02 }}
      transition={{ duration: 0.2 }}
      className="h-full"
    >
      <Card className="h-full overflow-hidden border-0 shadow-md hover:shadow-xl transition-shadow duration-300 bg-white">
        <div className="relative">
          <Link to={createPageUrl(`Product?id=${product.id}`)}>
            <div className="aspect-square overflow-hidden bg-gray-100">
              <img
                src={product.image_url || `https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=400&h=400&fit=crop&crop=center`}
                alt={product.name}
                className="w-full h-full object-cover transition-transform duration-300 hover:scale-110"
              />
            </div>
          </Link>
          
          {product.featured && (
            <Badge className="absolute top-3 left-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white">
              Featured
            </Badge>
          )}
          
          <Button
            variant="ghost"
            size="icon"
            className="absolute top-3 right-3 bg-white/80 backdrop-blur-sm hover:bg-white"
          >
            <Heart className="w-4 h-4" />
          </Button>
        </div>

        <CardContent className="p-4 flex flex-col justify-between flex-1">
          <div className="space-y-2">
            <div className="flex items-center space-x-2">
              <div className="flex items-center">
                {renderStars(Math.round(product.rating || 0))}
              </div>
              <span className="text-sm text-gray-500">
                ({product.reviews_count || 0})
              </span>
            </div>
            
            <Link to={createPageUrl(`Product?id=${product.id}`)}>
              <h3 className="font-semibold text-gray-900 hover:text-blue-600 transition-colors line-clamp-2">
                {product.name}
              </h3>
            </Link>
            
            {product.brand && (
              <p className="text-sm text-gray-500">{product.brand}</p>
            )}
            
            <p className="text-sm text-gray-600 line-clamp-2">
              {product.description}
            </p>
          </div>

          <div className="mt-4 space-y-3">
            <div className="flex items-center justify-between">
              <div className="text-2xl font-bold text-gray-900">
                ${product.price?.toFixed(2)}
              </div>
              {product.stock_quantity <= 5 && product.stock_quantity > 0 && (
                <Badge variant="outline" className="text-orange-600 border-orange-600">
                  Only {product.stock_quantity} left
                </Badge>
              )}
              {product.stock_quantity === 0 && (
                <Badge variant="outline" className="text-red-600 border-red-600">
                  Out of stock
                </Badge>
              )}
            </div>
            
            <Button
              className="w-full bg-blue-600 hover:bg-blue-700"
              onClick={() => onAddToCart(product)}
              disabled={product.stock_quantity === 0}
            >
              <ShoppingCart className="w-4 h-4 mr-2" />
              Add to Cart
            </Button>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
